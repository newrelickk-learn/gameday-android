stages:
  - build
  - deploy

docker-build:
  # Use the official docker image.
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""


  stage: build
  services:
    - docker:dind
  before_script:
    - apk add --update py-pip npm
    - pip install awscli --break-system-packages
    - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/g7c8o4c7
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag="latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag="$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - |
      if [[ "$MAKE_APPIUM" == "true" ]]; then
        docker build . --network host --tag public.ecr.aws/g7c8o4c7/appium:latest --build-arg NEW_RELIC_MOBILE_KEY=${NEW_RELIC_MOBILE_KEY}
        docker push public.ecr.aws/g7c8o4c7/appium:latest
      fi
    - |
      if [[ "$MAKE_SSH" == "true" ]]; then
        if [[ "$SSH_CONTAINER_VERSION" == "" ]]; then
          tag="latest"
        else
          tag="$SSH_CONTAINER_VERSION"
        fi
        cd deployment
        docker build . --network host --tag public.ecr.aws/g7c8o4c7/awsssh:$tag
        docker push public.ecr.aws/g7c8o4c7/awsssh:$tag
      fi

  # Run this job in a branch where a Dockerfile exists
  only:
    - web

docker-build-for-tag:
  # Use the official docker image.
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""

  stage: build
  services:
    - docker:dind
  before_script:
    - apk add --update py-pip npm unzip
    - pip install awscli --break-system-packages
    - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/g7c8o4c7
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      tag=$(echo $CI_COMMIT_TAG | sed "s/\./-/g")
    - echo "docker build . --network host --tag public.ecr.aws/g7c8o4c7/appium:${tag} --build-arg COMMIT_SHA=${CI_COMMIT_SHA} --build-arg RELEASE_TAG=${CI_COMMIT_TAG}"
    - docker build . --network host --tag public.ecr.aws/g7c8o4c7/appium:${tag} --build-arg NEW_RELIC_MOBILE_KEY=${NEW_RELIC_MOBILE_KEY}
    - docker push public.ecr.aws/g7c8o4c7/appium:${tag}
    - cd ./deployment/init
    - docker build . --network host --tag public.ecr.aws/g7c8o4c7/appium-init:${tag} --build-arg NEW_RELIC_MOBILE_KEY=${NEW_RELIC_MOBILE_KEY}
    - docker push public.ecr.aws/g7c8o4c7/appium-init:${tag}
  only:
    - tags
  except:
    - schedules

deploy:
  stage: deploy
  image: dtzar/helm-kubectl:3.8.2
  before_script:
    - apk add --update py-pip
    - pip install awscli
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag="latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=`echo $CI_COMMIT_REF_SLUG | sed "s/\//-/g"`
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - sed -i "s/appium:latest/appium:${tag}/g" deployment.yaml
    - sed -i "s/appium-init:latest/appium-init:${tag}/g" deployment.yaml
    - sed -i "s|YOUR_AWS_ACCESS_KEY_ID|${APPIUM_AWS_ACCESS_KEY_ID}|g" deployment.yaml
    - sed -i "s|YOUR_AWS_SECRET_ACCESS_KEY|${APPIUM_AWS_SECRET_ACCESS_KEY}|g" deployment.yaml
    - mkdir -p ~/.kube; cat ${KUBE_CONFIG} > /root/.kube/config
    - kubectl apply -f deployment.yaml
  only:
    - tags
    # - merge_requests
    #- web

